app.post('/register', (req, res) => {
    const {name, age, email, password} = req.body
    bcrypt.hash(password, 10)
    .then(hash => {
        UserModel.create({name, age, email, password:hash})
        .then(user => res.json(user))
        .catch(err => res.json(err))
    }).catch(err => console.log(err.message))
}) 

app.post('/login', (req, res) => {
    const { email, password } = req.body;

    UserModel.findOne({ email: email })
        .then(user => {
            if (user) {
                bcrypt.compare(password, user.password, (err, response) => {
                    if (response) {
                        const token = jwt.sign({ email: user.email, name: user.name }, "jwt-secret-key", { expiresIn: "1d" });
                        res.cookie('token', token);
                        res.json('Success');
                    } else {
                        res.status(401).json('Password is incorrect');
                    }                    
                });
            } else {
                res.status(404).json('User not exist');
            }
        })
        .catch(err => {
            console.error(err);
            res.status(500).json('Internal Server Error');
        });
});

 // app.post('/login', (req, res) => {
    //     const { email, password } = req.body;

    //     UserModel.findOne({ email })
    //         .then(user => {
    //             if (!user) {
    //                 return res.status(404).json({ message: 'User not found' });
    //             }

    //             bcrypt.compare(password, user.password)
    //                 .then(match => {
    //                     if (match) {
    //                         res.json({ message: 'Login successful', user });
    //                     } else {
    //                         res.status(401).json({ message: 'Invalid password' });
    //                     }
    //                 })
    //                 .catch(err => {
    //                     console.log(err);
    //                     res.status(500).json({ error: 'Internal Server Error' });
    //                 });
    //         })
    //         .catch(err => {
    //             console.log(err);
    //             res.status(500).json({ error: 'Internal Server Error' });
    //         });
    // });   
